/* CSS Variables for Deep Dark Purple Theme with Tron Blue Highlights */
:root {
    /* Our seven approved blue colors */
    --blue-1: #000000;  /* Darkest-black tiny*/
    --blue-2: #000036; /* Very Dark Blue */
    --blue-3: #02066F; /* Dark Blue */
    --blue-4: #170484; /* Dark Blue with Deep Hue */
    --blue-5: #050c91; /* 050c91 */
    --blue-6: #001489; /* Pantone Reflex Blue C Color */
    --blue-7: #0000B3;  /* Brightest: Bright Blue */

    /* Single background gradient using approved colors */
    --background-gradient: linear-gradient(
        to bottom,
        var(--blue-1) 0%,
        var(--blue-2) 5%,
        var(--blue-3) 20%,
        var(--blue-4) 35%,
        var(--blue-5) 50%,
        var(--blue-6) 75%,
        var(--blue-7) 100%
    );

    /* Remove unused gradient variables */
    --background-gradient-odd: none;
    --background-gradient-even: none;

    /* Update other gradients to use only approved colors */
    --primary-gradient: linear-gradient(
        to bottom,
        var(--blue-1) 0%,
        var(--blue-4) 50%,
        var(--blue-7) 100%
    );
    
    --secondary-gradient: linear-gradient(
        to bottom,
        var(--blue-1) 0%,
        var(--blue-3) 50%,
        var(--blue-7) 100%
    );
    
    --task-form-gradient: linear-gradient(
        to bottom,
        rgba(0, 0, 105, 0.95) 0%,    /* Based on #000069 */
        rgba(27, 2, 177, 0.95) 100%   /* Based on #1b02b1 */
    );

    /* Keep existing non-blue colors */
    --text-color: #FFD700;
    --muted-text: #FFA500;
    --bright-text: #FFDF00;
    --header-gradient: linear-gradient(
        to bottom,
        #FFD700 0%,
        #FFA500 100%
    );

    /* Other non-gradient variables remain unchanged */
    --card-background: rgba(255, 255, 255, 0.05);
    --overlay-background: rgba(255, 255, 255, 0.02);
    --error-color: #ff4d4d;
    --success-color: #4caf50;
    --font-primary: 'Montserrat', sans-serif;
    --font-secondary: 'Roboto', sans-serif;
    --box-shadow: 0 8px 32px 0 rgba(0, 0, 105, 0.37);
    --backdrop-filter: blur(8px);
    --border-radius: 12px;
    --transition-speed: 0.3s;

    /* Animation Durations */
    --animation-duration-pulse: 0.6s;
    --animation-duration-shine: 1s;
    --animation-duration-confetti: 1.5s;
}

/* Fixed Background Containers */
.fixed-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

#gradientBackground {
    z-index: -20;
    background: linear-gradient(
        to bottom,
        #000000 0%,
        #000036 15%,
        #02066F 30%,
        #170484 45%,
        #050c91 60%,
        #001489 75%,
        #0000B3 90%
    );
}

#starsContainer {
    z-index: -10;
}

/* Basic Reset and Styling */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: var(--font-secondary);
    font-size: 24px;
    background: none;
    color: var(--text-color);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: flex-start; /* Changed from center to flex-start */
    padding: 10px;
    position: relative;
    /* Removed overflow: hidden; to enable scrolling */
    overflow: visible;
    padding-top: 120px; /* Increased to accommodate navbar + input container */
}

.container {
    max-width: 800px;
    width: 100%;
    margin: 0 auto;
    background: var(--card-background);
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    backdrop-filter: var(--backdrop-filter);
    animation: fadeIn 0.6s ease-out;
}

/* Input Container Styles */
.container-input {
    position: fixed;
    top: 60px; /* Position right below navbar */
    left: 0;
    right: 0;
    z-index: 999;
    padding: 1rem;
    background: var(--background-gradient);
}

/* Main Container Styles */
.container-main {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.container::-webkit-scrollbar {
    width: 10px;
}

.container::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 5px;
}

.container::-webkit-scrollbar-thumb {
    background: var(--primary-gradient);
    border-radius: 5px;
}

.container::-webkit-scrollbar-thumb:hover {
    background: var(--secondary-gradient);
}

/* Header Component */
.header {
    text-align: center;
    position: relative;
    padding: 1rem 3rem;
    margin: 0;
    background: none;
    backdrop-filter: none;
    z-index: 1;
}

.header .title {
    font-family: var(--font-primary);
    font-size: 1.4rem;
    margin-bottom: 0.5rem;
    background: var(--header-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    transition: background 0.5s ease;
    text-shadow: 0 2px 4px rgba(0,0,0,0.2);
    position: relative;
    z-index: 9999;
}

.header p {
    display: none; /* Hide the subtext */
}

/* Stats Component */
.stats {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    gap: 1rem;
    position: relative;
    z-index: 1;
}

/* Progress Bar Component */
.progress-container {
    width: 100%;
    position: relative;
    z-index: 1;
}

.progress-bar {
    width: 100%;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 25px;
    overflow: hidden;
    height: 20px;
    box-shadow: inset 0 2px 4px rgba(0,0,0,0.2);
    position: relative;
}

.progress-fill {
    height: 100%;
    width: 0%;
    background: var(--header-gradient);
    transition: width 0.4s ease;
    box-shadow: 0 0 10px var(--primary-gradient);
}

.progress-text {
    text-align: center;
    margin-top: 0.5rem;
    font-size: 1.3rem;
    color: var(--muted-text);
    font-weight: 500;
}

/* Task Form Component */
.task-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    background: var(--task-form-gradient);
    padding: 1.5rem;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    transition: background 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.1);
    position: relative;
    z-index: 1;
    margin: 0; /* Remove margin as container handles spacing */
}

.task-form .input-row {
    width: 100%;
}

.task-form .input-row input[type="text"] {
    width: 100%;
    padding: 0.75rem 1rem;
    border: none;
    border-radius: 8px;
    font-size: 1.3rem;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    transition: background-color var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
}

.task-form .controls-row {
    display: flex;
    align-items: center;
    gap: 1rem;
    width: 100%;
}

.task-form .points-controls {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    flex: 1;
}

.task-form .points-controls select {
    min-width: 100px;
    padding: 0.75rem 1rem;
    border: none;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.1);
    color: var (--text-color);
    font-size: 1.3rem;
    cursor: pointer;
}

.task-form .points-controls input[type="number"] {
    width: 100px;
    padding: 0.75rem 1rem;
    border: none;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    font-size: 1.3rem;
}

.task-form .button-row {
    display: flex;
    justify-content: center;
    width: 100%;
}

.task-form .button-row button {
    min-width: 150px;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    background: var(--primary-gradient);
    color: #fff;
    font-size: 1.3rem;
    cursor: pointer;
    transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease, background 0.5s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.task-form:hover {
    background: linear-gradient(
        135deg,
        rgba(0, 0, 51, 1) 0%,
        rgba(25, 25, 112, 1) 100%
    );
}

.task-form input[type="text"] {
    flex: 2;
    padding: 0.75rem 1rem;
    border: none;
    border-radius: 8px;
    font-size: 1.3rem;
    outline: none;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    transition: background-color var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
}

.task-form input[type="text"]::placeholder {
    color: rgba(255, 215, 0, 0.6);
}

.task-form input[type="text"]:focus {
    background-color: rgba(255, 255, 255, 0.15);
    box-shadow: 0 0 8px var(--primary-gradient);
}

.task-form select {
    padding: 0.75rem 1rem;
    border: none;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    font-size: 1.5rem;
    font-weight: 400;
    width: auto;
    cursor: pointer;
    transition: background-color var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
    outline: none;
}

.task-form select:focus {
    background-color: rgba(255, 255, 255, 0.15);
    box-shadow: 0 0 8px var(--secondary-gradient);
}

.task-form button {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    background: var(--primary-gradient);
    color: #fff;
    font-size: 1.3rem;
    cursor: pointer;
    transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease, background 0.5s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    box-shadow: 0 4px 6px rgba(0,0,0,0.3);
}

.task-form button:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0,0,0,0.4);
    background: var(--secondary-gradient);
}

/* Task Form Updates */
.task-form {
    padding: 1.5rem;
    background: var(--task-form-gradient);
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.task-form-row {
    display: flex;
    gap: 1rem;
    width: 100%;
}

.task-form-row input[type="text"] {
    flex: 1;
    padding: 0.75rem 1rem;
    border: none;
    border-radius: 8px;
    font-size: 1.3rem;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
}

.task-controls {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

.task-controls select {
    padding: 0.75rem;
    border: none;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    font-size: 1.3rem;
    cursor: pointer;
    min-width: 80px;
}

.task-controls #customPoints {
    width: 80px;
    padding: 0.75rem;
    border: none;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    font-size: 1.3rem;
}

.wishlist-checkbox-wrapper {
    padding: 0.75rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 46px;
    height: 46px;
}

#addTaskButton {
    padding: 0.75rem;
    border: none;
    border-radius: 8px;
    background: var(--primary-gradient);
    color: #fff;
    font-size: 1.3rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 46px;
    height: 46px;
}

/* Mobile Responsiveness Updates */
@media (max-width: 768px) {
    .task-form-row {
        flex-direction: column;
        gap: 0.5rem;
    }

    .task-controls {
        width: 100%;
        justify-content: space-between;
    }

    .task-controls select {
        flex: 1;
        min-width: 0;
    }

    .task-controls #customPoints {
        width: 60px;
    }

    .wishlist-checkbox-wrapper,
    #addTaskButton {
        min-width: 44px;
        height: 44px;
    }

    body {
        padding-top: 110px; /* Slightly reduced for mobile */
    }

    .container-input {
        padding: 0.5rem;
    }

    .container-main {
        padding: 1rem;
    }
}

@media (max-width: 480px) {
    .task-form {
        padding: 1rem;
    }

    .task-controls {
        gap: 0.25rem;
    }

    .task-controls select,
    .task-controls #customPoints,
    .wishlist-checkbox-wrapper,
    #addTaskButton {
        font-size: 1.1rem;
        padding: 0.6rem;
    }
}

/* Task Lists Component */
.task-list {
    background: var(--overlay-background);
    padding: 1rem;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
    transition: background 0.3s ease;
    position: relative;
    z-index: 1;
}

/* Add specific styling for completed tasks list only */
#completedTasksList {
    max-height: 400px;
    overflow-y: auto;
    padding-right: 10px;
}

/* Keep the scrollbar styling only for completed tasks */
#completedTasksList::-webkit-scrollbar {
    width: 10px;
}

#completedTasksList::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 5px;
}

#completedTasksList::-webkit-scrollbar-thumb {
    background: var(--primary-gradient);
    border-radius: 5px;
}

#completedTasksList::-webkit-scrollbar-thumb:hover {
    background: var(--secondary-gradient);
}

.task-list h3 {
    margin-bottom: 1rem;
    font-size: 1.5rem;
    color: var(--header-gradient);
    background: var(--header-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    display: inline-block;
}

/* Task Item Component - Updated for better mobile wrapping */
.task-item {
    display: flex;
    align-items: flex-start; /* Change from center to flex-start */
    justify-content: space-between;
    background-color: rgba(255, 255, 255, 0.05);
    padding: 1rem;
    border-radius: var(--border-radius);
    margin-bottom: 1rem;
    transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease, background-color var(--transition-speed) ease;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    transform: translateZ(0);
    position: relative;
    flex-wrap: wrap; /* Allow items to wrap */
    gap: 1rem; /* Add gap between wrapped elements */
    min-height: auto; /* Remove fixed height constraint */
    height: auto; /* Allow height to grow */
    width: 100%; /* Full width */
}

.task-item:hover {
    transform: translateY(-4px);
    box-shadow: 0 6px 12px rgba(0,0,0,0.2);
    background-color: rgba(255, 255, 255, 0.1);
}

.task-details {
    display: flex;
    align-items: flex-start; /* Align items to top for multi-line text */
    gap: 1rem;
    flex: 1 1 auto; /* Allow growing and shrinking */
    min-width: 0; /* Allow text wrapping */
    width: 100%; /* Full width */
}

.task-details input[type="checkbox"] {
    width: 1.5rem;
    height: 1.5rem;
    cursor: pointer;
    accent-color: var(--primary-gradient);
    transition: transform var(--transition-speed) ease;
    margin-top: 0.4rem; /* Align checkbox with first line of text */
}

.task-details input[type="checkbox"]:hover {
    transform: scale(1.2);
}

/* Update Task Text Input Styling */
.task-text {
    flex: 1 1 auto; /* Allow growing and shrinking */
    min-width: 0; /* Allow text wrapping */
    max-width: none; /* Remove max width constraint */
    height: auto; /* Allow height to grow */
    min-height: 1.5em; /* Minimum height for single line */
    white-space: pre-wrap; /* Preserve whitespace and wrap */
    overflow: visible; /* Show all content */
    text-overflow: clip; /* Don't truncate */
    word-wrap: break-word; /* Break long words */
    word-break: break-word; /* Break words at appropriate points */
    line-height: 1.4;
    padding: 0.2rem 0;
    margin: 0;
    border: none;
    background: transparent;
    resize: none;
    display: block; /* Use block display */
    font-family: var(--font-secondary);
    font-size: 1.3rem;
    color: var(--text-color);
}

.task-text:disabled {
    color: var(--muted-text);
    cursor: not-allowed;
}

.task-text.completed {
    text-decoration: line-through;
    color: var(--muted-text);
}

.task-actions {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    flex-wrap: wrap;
    justify-content: flex-end;
    margin-left: auto; /* Push actions to the right */
    padding-left: 1rem; /* Add some space from the text */
    flex: 0 0 auto; /* Prevent shrinking of actions */
    margin-left: auto;
}

.task-actions select {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.1);
    color: #fff;
    font-size: 1.3rem;
    cursor: pointer;
    transition: background-color var(--transition-speed) ease, box-shadow var(--transition-speed) ease;
    outline: none;
}

.task-actions select:hover {
    background-color: rgba(255, 255, 255, 0.15);
    box-shadow: 0 2px 6px rgba(0,0,0,0.2);
}

.task-actions button {
    background: none;
    border: none;
    color: var(--blue-7); /* Replace #1e90ff with our brightest blue */
    cursor: pointer;
    font-size: 1.3rem;
    transition: color var(--transition-speed) ease, transform var(--transition-speed) ease;
    display: flex;
    align-items: center;
    justify-content: center;
}

.task-actions button:hover {
    color: #ffffff;
    transform: scale(1.2);
}

/* Reset Button Component */
.reset-button {
    width: 100%;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    background: var(--primary-gradient);
    color: var(--bright-text);
    font-size: 1.3rem;
    cursor: pointer;
    transition: transform var(--transition-speed) ease, box-shadow var (--transition-speed) ease, background 0.5s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    box-shadow: 0 4px 6px rgba(0,0,0,0.3);
}

.reset-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0,0,0,0.4);
    background: var(--secondary-gradient);
}

/* Modal Component */
.modal {
    display: none; /* Hidden by default */
    position: fixed;
    z-index: 1000;
    padding-top: 100px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.8);
    animation: fadeIn 0.6s ease-out;
}

.modal-content {
    background-color: rgba(255, 255, 255, 0.05);
    margin: auto;
    padding: 2.5rem;
    border: none;
    width: 80%;
    max-width: 500px;
    border-radius: var(--border-radius);
    position: relative;
    text-align: center;
    box-shadow: var(--box-shadow);
    backdrop-filter: var(--backdrop-filter);
    animation: slideDown 0.6s ease-out;
    color: var(--text-color);
}

.close-modal {
    color: #aaa;
    position: absolute;
    top: 15px;
    right: 20px;
    font-size: 2rem;
    font-weight: bold;
    cursor: pointer;
    transition: color var(--transition-speed) ease, transform var(--transition-speed) ease;
}

.close-modal:hover,
.close-modal:focus {
    color: #fff;
    transform: rotate(90deg);
}

/* Confirmation Modal Component */
.confirm-modal {
    display: none; /* Hidden by default */
    position: fixed;
    z-index: 1500;
    padding-top: 100px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.5);
    animation: fadeIn 0.6s ease-out;
}

.confirm-modal-content {
    background-color: rgba(255, 255, 255, 0.05);
    margin: auto;
    padding: 2.5rem;
    border: none;
    width: 80%;
    max-width: 400px;
    border-radius: var(--border-radius);
    text-align: center;
    position: relative;
    box-shadow: var(--box-shadow);
    backdrop-filter: var(--backdrop-filter);
    animation: slideDown 0.6s ease-out;
    color: var(--text-color);
}

.confirm-modal-buttons {
    margin-top: 2rem;
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    gap: 1rem;
}

.confirm-modal-buttons button {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    font-size: 1.3rem;
    cursor: pointer;
    transition: background-color var(--transition-speed) ease, transform var(--transition-speed) ease;
    width: 45%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    box-shadow: 0 4px 6px rgba(0,0,0,0.2);
}

.confirm-modal-buttons .confirm {
    background: var(--primary-gradient);
    color: #fff;
}

.confirm-modal-buttons .confirm:hover {
    background: var(--secondary-gradient);
    transform: translateY(-3px);
}

.confirm-modal-buttons .cancel {
    background-color: rgba(255, 255, 255, 0.05);
    color: #fff;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.confirm-modal-buttons .cancel:hover {
    background-color: rgba(255, 255, 255, 0.1);
    transform: translateY(-3px);
}

/* Confetti Container */
.confetti-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 2000;
    overflow: hidden;
}

.confetti {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: var(--bright-text);
    opacity: 0.9;
    animation: confetti var(--animation-duration-confetti) linear forwards;
    border-radius: 50%; /* Make confetti circular */
}

/* Animations */

/* Fade In */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

/* Slide Down */
@keyframes slideDown {
    from { transform: translateY(-20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

/* Pulse Animation for Completed Tasks */
@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

.pulse {
    animation: pulse var(--animation-duration-pulse) ease;
}

/* Shine Animation for Level Up */
@keyframes shine {
    0% {
        box-shadow: 0 0 10px var(--success-color);
    }
    50% {
        box-shadow: 0 0 20px var(--success-color);
    }
    100% {
        box-shadow: 0 0 10px var(--success-color);
    }
}

.shine {
    animation: shine var(--animation-duration-shine) ease-in-out;
}

/* Level Up Badge Animation */
@keyframes scaleUp {
    0% { transform: scale(0.5); opacity: 0; }
    50% { transform: scale(1.2); opacity: 1; }
    100% { transform: scale(1); opacity: 0; }
}

.level-up-badge {
    position: absolute;
    top: -50px;
    left: 50%;
    transform: translateX(-50%);
    padding: 0.5rem 1rem;
    background: var(--success-color);
    color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.2);
    opacity: 0;
    animation: scaleUp 1s forwards;
    z-index: 1001;
    font-weight: bold;
}

/* Confetti Animation */
@keyframes confetti {
    0% {
        transform: translateY(0) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(100vh) rotate(720deg);
        opacity: 0;
    }
}

/* Optional: Smooth Number Transition */
.number-transition {
    transition: all 0.5s ease;
}

/* Updated Navbar Styles */
.navbar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 60px;
    background: var(--primary-gradient);
    color: #fff;
    z-index: 10000;
    padding: 0 1rem;
}

.navbar-container {
    max-width: 1200px;
    height: 100%;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
}

.navbar-left, .navbar-right {
    flex: 0 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 44px; /* Ensure minimum width for buttons */
}

.navbar-center {
    flex: 1;
    max-width: 400px;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Add after the navbar styles */
.search-container {
    position: relative;
    width: 100%;
    display: flex;
    align-items: center;
}

.clear-search {
    position: absolute;
    right: 12px;
    color: var(--muted-text);
    background: none;
    border: none;
    font-size: 20px;
    padding: 0;
    cursor: pointer;
    opacity: 0;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
}

.clear-search:hover {
    color: var(--text-color);
}

/* Show clear button when search has content */
.search-input:not(:placeholder-shown) + .clear-search {
    opacity: 0.5;
}

.search-input {
    padding-right: 35px !important;
}

/* Mobile-specific navbar styles */
@media (max-width: 768px) {
    .navbar {
        height: 50px; /* Slightly smaller height on mobile */
        padding: 0 0.5rem;
    }

    .navbar-container {
        gap: 0.5rem;
    }

    .navbar-left, .navbar-right {
        width: 44px; /* Fixed width for button containers */
        height: 44px;
    }

    .navbar-center {
        flex: 1;
        max-width: none;
        margin: 0 0.5rem;
    }

    .search-container {
        flex: 1;
        position: relative;
        max-width: none;
        width: 100%;
        height: 36px; /* Fixed height for mobile */
    }

    .search-input {
        width: 100%;
        height: 36px;
        font-size: 16px; /* Prevent iOS zoom on focus */
        padding: 0 32px 0 12px; /* Make room for the X button */
        border-radius: 18px;
        background: rgba(255, 255, 255, 0.1);
        color: var(--text-color);
        border: none;
        outline: none;
        box-sizing: border-box; /* Ensure padding is included in width */
    }

    .clear-search {
        position: absolute;
        right: 8px; /* Position further left to stay inside */
        top: 50%;
        transform: translateY(-50%);
        width: 24px;
        height: 24px;
        font-size: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: none;
        border: none;
        color: rgba(255, 215, 0, 0.6);
        padding: 0;
        margin: 0;
        pointer-events: auto;
        z-index: 2;
        opacity: 0;
    }

    /* Override any flex-basis or min-width that might cause shrinking */
    .navbar-center {
        flex: 1;
        width: 100%;
        min-width: 0;
        max-width: calc(100% - 88px);
    }

    body {
        padding-top: 110px; /* Slightly reduced for mobile */
    }

    .container-input {
        padding: 0.5rem;
    }

    .container-main {
        padding: 1rem;
    }

    .search-container {
        flex: 1;
        position: relative;
        max-width: none;
        width: 100%;
        height: 36px; /* Fixed height for mobile */
    }

    .search-input {
        width: 100%;
        height: 36px;
        font-size: 16px; /* Prevent iOS zoom on focus */
        padding: 0 32px 0 12px; /* Make room for the X button */
        border-radius: 18px;
        background: rgba(255, 255, 255, 0.1);
        color: var(--text-color);
        border: none;
        outline: none;
    }

    .clear-search {
        position: absolute;
        right: 8px; /* Position further left to stay inside */
        top: 50%;
        transform: translateY(-50%);
        width: 24px;
        height: 24px;
        font-size: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: none;
        border: none;
        color: rgba(255, 215, 0, 0.6);
        padding: 0;
        margin: 0;
        pointer-events: auto;
        z-index: 2;
        opacity: 0;
    }

    /* Override any flex-basis or min-width that might cause shrinking */
    .navbar-center {
        flex: 1;
        width: 100%;
        min-width: 0;
        max-width: calc(100% - 88px);
    }
}

/* Extra small devices */
@media (max-width: 480px) {
    .navbar-container {
        padding: 0 0.25rem;
    }

    .navbar-center {
        margin: 0 0.25rem;
    }

    .search-input {
        width: 120px;
        font-size: 14px;
    }

    .search-input:focus {
        width: 150px;
    }

    #wishlistFilter,
    #logoutButton {
        width: 32px;
        height: 32px;
        font-size: 1rem;
    }

    .search-container {
        height: 32px; /* Slightly smaller for very small devices */
    }

    .search-input {
        height: 32px;
        font-size: 16px; /* Keep font size to prevent zoom */
        padding: 0 28px 0 10px; /* Adjust padding for smaller screen */
    }

    .clear-search {
        right: 6px;
        width: 22px;
        height: 22px;
        font-size: 16px;
    }
}

/* Wishlist Checkbox Wrapper */
.wishlist-checkbox-wrapper {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    cursor: pointer;
    transition: all var(--transition-speed) ease;
    justify-content: center;
    min-width: 50px;
}

.wishlist-checkbox-wrapper:hover {
    background: rgba(255, 255, 255, 0.2);
}

.wishlist-checkbox {
    width: 1.5rem;
    height: 1.5rem;
    cursor: pointer;
    accent-color: #ADD8E6; /* Light blue */
}

/* Filter Button - Updated size and styling */
.filter-button {
    background: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    border: none;
    border-radius: 8px;
    padding: 0.75rem 1.2rem;  /* Increased padding */
    cursor: pointer;
    transition: all var(--transition-speed) ease;
    font-size: 1.5rem;  /* Increased font size */
}

.filter-button.active {
    background: var(--secondary-gradient);
    transform: scale(1.1);  /* Slightly larger scale on active state */
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
}

.filter-button:hover {
    transform: scale(1.1);
    background: rgba(255, 255, 255, 0.2);
}

/* Task Item Wishlist Indicator */
.task-item.wishlist::before {
    content: '🛍️';
    position: absolute;
    right: 1rem;
    top: 1rem;
    font-size: 1.2rem;
    opacity: 0.7;
}

/* Cart Toggle Button */
.cart-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 5px 10px;
    transition: transform 0.2s ease;
    opacity: 0.5;
    color: #ADD8E6; /* Light blue */
}

.cart-toggle.active {
    opacity: 1;
    color: #87CEFA; /* Lighter shade of blue */
}

.cart-toggle:hover {
    transform: scale(1.2);
    color: #B0E0E6; /* Slightly different light blue for hover */
}

/* Achievement Image Styling */
.achievement-image {
    width: 100%;
    max-width: 800px;
    margin: 1rem auto;
    text-align: center;
    opacity: 0;
    transition: opacity 0.5s ease;
    order: 3; /* Place after active tasks but before task form */
}

.achievement-image img {
    max-width: 100%;
    height: auto;
    border-radius: var(--border-radius);
    box-shadow: var(--box-shadow);
}

.achievement-image.visible {
    opacity: 1;
}

/* Responsive Design */
@media (max-width: 768px) {
    .container {
        padding: 1rem;
        padding-top: 0; /* Remove top padding since header has its own */
    }

    .header .title {
        font-size: 1.8rem; /* Slightly reduce font size on mobile */
        padding: 0 2rem; /* Add horizontal padding */
    }

    #logoutButton span {
        display: none; /* Hide button text on mobile */
    }

    #logoutButton {
        top: 0.5rem;
        right: 0.5rem;
        border-radius: 50%; /* Make it circular on mobile */
    }
    
    .header p {
        font-size: 1.3rem;
    }

    .stats {
        justify-content: space-between;
    }

    .task-form {
        flex-direction: column;
    }

    .task-form input[type="text"],
    .task-form select,
    .task-form button {
        width: 100%;
    }

    .task-actions {
        flex-direction: column;
        align-items: flex-start;
    }

    .task-actions select,
    .task-actions button {
        width: 100%;
    }

    /* Reorder container elements using flexbox order */
    .container {
        display: flex;
        flex-direction: column;
    }

    .header {
        padding: 1rem;
        padding-top: 3rem; /* Add space above title for logout button */
    }

    .task-form {
        order: 2;
        margin-top: 1.5rem;
    }

    .stats {
        order: 3;
        margin-top: 1.5rem;
    }

    .progress-container {
        order: 4;
    }

    .task-list {
        order: 5;
    }

    #completedTasksList {
        order: 6;
    }

    .reset-button {
        order: 7;
    }

    .navbar-container {
        flex-direction: column;
        align-items: center;
    }

    .search-input {
        width: 100%;
        max-width: 300px;
        margin-top: 10px;
    }

    #logoutButton {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .task-actions {
        flex-direction: row; /* Keep actions in a single row */
        justify-content: flex-start; /* Align to the start */
        gap: 0.5rem; /* Reduce gap between elements */
        margin-top: 0; /* Remove top margin */
        flex-wrap: nowrap; /* Prevent wrapping */
    }

    .task-item {
        padding: 1rem;
        gap: 1rem;
    }

    .task-details {
        width: 100%;
        min-width: 0;
    }

    .task-text {
        width: 100%;
        min-width: 0;
    }

    .task-actions {
        width: auto;
        flex-wrap: nowrap.
    }

    /* Custom points input adjustments */
    input[type="number"].custom-points {
        width: 60px; /* Smaller width */
        padding: 0.5rem; /* Reduced padding */
        font-size: 1rem; /* Smaller font size */
    }

    /* Delete button adjustments */
    .task-actions button {
        padding: 0.5rem; /* Reduced padding */
        font-size: 1rem; /* Smaller font size */
        margin: 0; /* Remove margins */
    }

    body {
        padding-top: 110px; /* Slightly reduced for mobile */
    }

    .container-input {
        padding: 0.5rem;
    }

    .container-main {
        padding: 1rem;
    }
}

@media (max-width: 480px) {
    body {
        padding: 10px;
    }

    .container {
        padding: 1.5rem;
    }

    .header .title {
        font-size: 1.75rem;
    }

    .header p {
        font-size: 1.3rem;
    }

    .stats div {
        font-size: 1.3rem;
    }

    .task-form {
        padding: 1rem;
    }

    .task-form .controls-row {
        flex-direction: row;
        gap: 0.5rem;
    }

    .task-form .points-controls {
        flex: 1;
    }

    .task-form .points-controls select,
    .task-form .points-controls input[type="number"] {
        font-size: 1.1rem;
        padding: 0.6rem 0.8rem;
        min-width: 80px;
    }

    .wishlist-checkbox-wrapper {
        padding: 0.6rem 0.8rem;
        min-width: 44px;
    }

    .task-form .button-row button {
        width: 100%;
        max-width: 200px;
    }

    .task-form input[type="text"],
    .task-form select,
    .task-form button {
        padding: 0.6rem 1rem;
        font-size: 1.3rem;
    }

    .task-item {
        flex-direction: column;
        align-items: flex-start;
    }

    .task-details {
        width: 100%;
        margin-bottom: 0.75rem;
    }

    .task-actions {
        width: 100%;
        justify-content: space-between.
    }

    .task-actions select,
    .task-actions button {
        font-size: 1.3rem;
        padding: 0.5rem;
    }

    .progress-text {
        font-size: 1.3rem;
    }

    .confirm-modal-content,
    .modal-content {
        padding: 2rem;
    }

    .confirm-modal-buttons button {
        padding: 0.6rem 1rem;
        font-size: 1.3rem;
        width: 45%;
    }
}

/* Login Container Styling */
#loginContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background: var(--background-gradient);
    color: var(--text-color);
}

#loginContainer input[type="email"],
#loginContainer input[type="password"] {
    padding: 0.75rem;
    margin: 0.5rem 0;
    border-radius: 8px;
    border: none;
    width: 300px;
    max-width: 80%;
    font-size: 1.3rem;
    outline: none;
}

#loginContainer button {
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 8px;
    background: var(--primary-gradient);
    color: #fff;
    cursor: pointer;
    margin-top: 1rem;
    font-size: 1.3rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    box-shadow: 0 4px 6px rgba(0,0,0,0.3);
    transition: transform var(--transition-speed) ease, box-shadow var(--transition-speed) ease, background 0.5s ease;
}

#loginContainer button:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0,0,0,0.4);
    background: var(--secondary-gradient);
}

#loginError {
    color: var(--error-color);
    margin-top: 1rem;
    display: none;
    font-size: 1.3rem;
}

/* Logout Button Styling */
/* Note: Styles for #logoutButton are already defined above */

/* Custom Points Input Styling */
input[type="number"].custom-points,
#customPoints {
    font-size: 1.3rem !important; /* Match the size of other form elements */
    font-weight: 500;
    padding: 0.75rem 1rem;
    width: 120px; /* Increased width for better visibility */
    text-align: center;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    transition: all var(--transition-speed) ease;
    margin: 0;
    height: auto;
    outline: none;
}

input[type="number"].custom-points:focus,
#customPoints:focus {
    background-color: rgba(255, 255, 255, 0.15);
    box-shadow: 0 0 8px var(--primary-gradient);
    outline: none;
}

/* Style the number input spinners */
input[type="number"].custom-points::-webkit-inner-spin-button,
input[type="number"].custom-points::-webkit-outer-spin-button,
#customPoints::-webkit-inner-spin-button,
#customPoints::-webkit-outer-spin-button {
    height: 40px;
    opacity: 1;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    cursor: pointer;
}

input[type="number"].custom-points::-webkit-inner-spin-button,
input[type="number"].custom-points::-webkit-outer-spin-button {
    height: 30px;
    opacity: 1;
}

/* Hashtag Group Styles */
.hashtag-group {
    border-left: 3px solid var(--blue-7);
    margin: 1.5rem 0;
    padding-left: 1rem;
}

.hashtag-header {
    color: var(--text-color);
    font-size: 1.2rem;
    margin-bottom: 1rem;
    opacity: 0.8;
}

/* Make hashtags in task text stand out */
.task-text .hashtag {
    color: var(--blue-7);
    font-weight: 500;
}

/* Task Numbering */
.task-number {
    min-width: 2rem;
    text-align: right;
    padding-right: 1rem;
    color: var(--muted-text);
    font-size: 1rem;
    user-select: none;
}

/* Achievement Image Visible Class */
.achievement-image.visible {
    opacity: 1;
}

/* Navbar Responsive Styles */
@media (max-width: 768px) {
    .navbar-container {
        padding: 0 10px;
    }

    .navbar-title {
        left: 10px;
        font-size: 20px;
    }

    .search-input {
        width: 140px;
        left: 50%;
    }

    .search-input:focus {
        width: 180px;
    }

    #logoutButton {
        right: 10px;
    }

    body {
        padding-top: 110px; /* Slightly reduced for mobile */
    }

    .container-input {
        padding: 0.5rem;
    }

    .container-main {
        padding: 1rem;
    }
}

@media (max-width: 480px) {
    .search-input {
        width: 120px;
        font-size: 14px;
    }

    .search-input:focus {
        width: 150px;
    }
}

/* Remove the task number styles as they're no longer needed */
.task-number {
    display: none;
}

/* Updated Hashtag Group Styles */
.hashtag-group {
    margin: 0.5rem 0;
    background: transparent;
}

/* Remove the vertical line */
.hashtag-group {
    border-left: none;
    padding-left: 0;
}

/* Toggle Header Styles */
.hashtag-toggle {
    display: flex;
    align-items: center;
    padding: 0.75rem 1rem;
    background: var(--overlay-background);
    border-radius: var(--border-radius);
    cursor: pointer;
    user-select: none;
    transition: background-color 0.3s ease;
    margin-bottom: 0.5rem;
    position: relative; /* Add relative positioning */
}

/* Add styles for the (+) button */
.hashtag-toggle .add-task-button {
    position: absolute;
    right: 50%;
    transform: translateX(50%);
    background: var(--primary-gradient);
    color: var(--text-color);
    border: none;
    border-radius: 16px;
    width: 48px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 1.4rem;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    transition: background-color 0.3s ease, transform 0.3s ease,
                box-shadow 0.3s ease;
}

.hashtag-toggle .add-task-button:active {
    transform: scale(1.2);
}

.hashtag-toggle .add-task-button:hover {
    background: var(--secondary-gradient);
    transform: scale(1.05);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
}

/* Mobile-specific adjustments */
@media (max-width: 768px) {
    .hashtag-toggle {
        padding: 0.5rem 0.75rem;
    }

    .hashtag-label {
        font-size: 1rem;
    }

    .task-count {
        font-size: 0.8rem;
    }

    /* Ensure the (+) button is visible on mobile */
    .hashtag-toggle .add-task-button {
        display: flex;
        width: 72px;
        height: 40px;
        font-size: 2rem;
    }
}

.toggle-icon {
    font-size: 0.8rem;
    margin-right: 0.5rem;
    transition: transform 0.3s ease;
}

.hashtag-label {
    flex: 1;
    font-size: 1.1rem;
    color: var(--text-color);
}

.task-count {
    background: rgba(255, 255, 255, 0.1);
    padding: 0.2rem 0.5rem;
    border-radius: 12px;
    font-size: 0.9rem;
    color: var(--muted-text);
}

/* Content Container Styles */
.hashtag-content {
    overflow: hidden;
    transition: max-height 0.3s ease-out;
    max-height: 0;
}

.hashtag-content .task-item:first-child {
    margin-top: 0;
}

/* Ensure tasks within groups maintain proper spacing */
.hashtag-content .task-item {
    margin: 0.5rem 0;
}

/* Update task details to account for removed numbering */
.task-details {
    padding-left: 0;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .hashtag-toggle {
        padding: 0.5rem 0.75rem;
    }

    .hashtag-label {
        font-size: 1rem;
    }

    .task-count {
        font-size: 0.8rem;
    }
}

/* Badge Section Styles */
.badge-section {
    width: 100%;
    margin: 2rem 0;
    order: 4;
}

.badge-navigation {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
}

.badge-nav-button {
    background: var(--overlay-background);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    color: var(--text-color);
    transition: all var(--transition-speed) ease;
}

.badge-nav-button:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: scale(1.1);
}

.badge-nav-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* Update Achievement Image Styles */
.achievement-image {
    width: 200px;
    height: 200px;
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

.achievement-image img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
}

/* Update Completed Tasks List Styles */
.completed-list {
    font-size: 0.85rem;
    opacity: 0.8;
}

.completed-list .task-item {
    padding: 0.5rem;
    margin-bottom: 0.5rem;
}

.completed-list .task-text {
    font-size: 1rem;
}

.completed-list h3 {
    font-size: 1.2rem;
    opacity: 0.9;
}

/* Update Stats Section */
.stats {
    order: 5;
    margin: 1rem 0;
    padding: 1rem;
    background: var(--overlay-background);
    border-radius: var(--border-radius);
}

/* Reorder sections using flexbox order */
.header { order: 1; }
.task-form { order: 2; }
#activeTasksList { order: 3; }
.badge-section { order: 4; }
.stats { order: 5; }
.progress-container { order: 6; }
#completedTasksList { order: 7; }
.reset-button { order: 8; }

/* Success Notification Styles - Upgraded */
.success-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, var(--quantum-void) 0%, var(--nebula-core) 100%);
    pointer-events: none;
    opacity: 0;
    z-index: 9999;
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.success-message {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.95);
    background: linear-gradient(145deg, var(--sweet-purple), var(--hyperjump), var(--singularity), var(--candy-pink));
    background-size: 300% 300%;
    color: rgba(255, 255, 255, 0.98);
    padding: 0.75rem 2.5rem;
    border-radius: 40px;
    font-size: 1.8rem;
    font-weight: 800;
    letter-spacing: 3px;
    pointer-events: none;
    opacity: 0;
    z-index: 10000;
    transform-style: preserve-3d;
    transition: all 0.5s ease-out;
    box-shadow: 0 0 20px rgba(119, 2, 255, 0.6),
                0 0 35px rgba(0, 20, 137, 0.4),
                inset 0 2px 8px rgba(255,255,255,0.3);
    animation: pulseShimmer 2s infinite alternate;
}

.success-message::before {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(180deg, rgba(255,255,255,0.3), transparent);
    border-radius: inherit;
    pointer-events: none;
}

@keyframes pulseShimmer {
    0% {
        transform: translate(-50%, -50%) scale(0.98);
        box-shadow: 0 0 10px rgba(119,2,255,0.4),
                    0 0 20px rgba(0,20,137,0.3);
    }
    50% {
        transform: translate(-50%, -50%) scale(1);
        box-shadow: 0 0 20px rgba(119,2,255,0.6),
                    0 0 30px rgba(0,20,137,0.4),
                    0 0 40px rgba(255,255,255,0.2);
    }
    100% {
        transform: translate(-50%, -50%) scale(0.98);
        box-shadow: 0 0 10px rgba(119,2,255,0.4),
                    0 0 20px rgba(0,20,137,0.3);
    }
}

.success-overlay.show {
    opacity: 1;
}

.success-message.show {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
}

/* Success Notification Styles */
.success-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, var(--quantum-void) 0%, var(--nebula-core) 100%);
    pointer-events: none;
    opacity: 0;
    z-index: 9999;
    transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.success-message {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.95);
    background: linear-gradient(
        135deg,
        var(--sweet-purple) 0%,
        var(--hyperjump) 40%,
        var(--singularity) 70%,
        var(--candy-pink) 100%
    );
    color: rgba(255, 255, 255, 0.98);
    padding: 0.75rem 2.5rem;
    border-radius: 40px;
    font-size: 1.8rem;
    font-weight: 800;
    letter-spacing: 3px;
    pointer-events: none;
    opacity: 0;
    z-index: 10000;
    transition: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    box-shadow: 
        0 0 50px rgba(123, 31, 255, 0.5),
        0 0 100px rgba(0, 20, 137, 0.3),
        0 10px 20px rgba(0, 0, 0, 0.4);
    text-transform: uppercase;
    backdrop-filter: blur(10px);
    border: 1.5px solid rgba(255, 255, 255, 0.2);
    animation: shinyText 3s linear infinite;
}

@keyframes shinyText {
    0% { background-position: 0% 50%; }
    100% { background-position: 100% 50%; }
}

.success-overlay.show {
    opacity: 1;
}

.success-message.show {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
}

/* Update mobile-specific navbar styles */
@media (max-width: 768px) {
    .navbar-container {
        flex-direction: row; /* Change to row instead of column */
        padding: 0 8px;
        height: 50px;
    }

    .navbar-left, .navbar-right {
        flex: 0 0 auto;
        width: 40px; /* Fixed width for side buttons */
    }

    .navbar-center {
        flex: 1;
        max-width: calc(100% - 100px); /* Account for side buttons and padding */
        margin: 0 10px;
    }

    .search-input {
        width: 100%;
        height: 32px;
        font-size: 0.9rem;
        margin: 0; /* Remove any margin */
    }
}

/* Extra small devices - adjust sizes further */
@media (max-width: 480px) {
    .navbar-container {
        padding: 0 4px;
    }

    .navbar-left, .navbar-right {
        width: 36px; /* Slightly smaller buttons */
    }

    .navbar-center {
        max-width: calc(100% - 88px);
        margin: 0 6px;
    }
}

/* Update search container and input styles */
.search-container {
    position: relative;
    width: 100%;
    display: flex;
    align-items: center;
}

.search-input {
    width: 100%;
    height: 40px;
    padding: 0 35px 0 15px; /* Increased right padding to accommodate the X button */
    border: none;
    border-radius: 20px;
    background: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    font-size: 1rem;
    transition: all 0.3s ease;
    backdrop-filter: blur(5px);
    box-shadow: 
        inset 0 2px 5px rgba(0, 0, 0, 0.2),
        0 2px 5px rgba(0, 89, 255, 0.1);
}

.clear-search {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: rgba(255, 215, 0, 0.6); /* Match placeholder color */
    font-size: 20px;
    cursor: pointer;
    padding: 0;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: all 0.2s ease;
    pointer-events: auto;
    z-index: 1;
}

.clear-search:hover {
    color: var(--text-color);
}

/* Show clear button when search has content */
.search-input:not(:placeholder-shown) + .clear-search {
    opacity: 0.8;
}

/* Mobile adjustments */
@media (max-width: 768px) {
    .search-input {
        height: 36px;
        font-size: 0.9rem;
    }

    .clear-search {
        right: 10px;
        font-size: 18px;
    }
}

/* Hashtag Configuration Panel */
.hashtag-config-panel {
    display: none; /* Hidden by default */
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    background: var(--overlay-background);
    backdrop-filter: blur(10px);
    padding: 1rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    z-index: 1000;
    color: var(--text-color);
    max-height: 80vh; /* Limit height on mobile */
    overflow-y: auto; /* Enable scrolling */
}

.hashtag-config-toggle {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    background: var(--primary-gradient);
    color: var(--text-color);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    font-size: 1.2rem;
    cursor: pointer;
    box-shadow: var(--box-shadow);
    z-index: 1001;
    display: flex; /* Always show */
    align-items: center;
    justify-content: center;
    animation: pulse 2s infinite;
}

.hashtag-config-content {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    max-width: 1200px;
    margin: 0 auto;
}

.hashtag-preset {
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--border-radius);
    padding: 1rem;
    flex: 1 1 300px;
}

.hashtag-preset input[type="text"],
.hashtag-preset input[type="number"],
.hashtag-preset input[type="color"] {
    background: rgba(255, 255, 255, 0.1);
    border: none;
    border-radius: 4px;
    padding: 0.5rem;
    color: var(--text-color);
    width: 100%;
    margin: 0.25rem 0;
}

.hashtag-preset input[type="color"] {
    height: 40px;
    cursor: pointer;
}

/* Mobile-specific adjustments */
@media (max-width: 768px) {
    .hashtag-config-panel {
        padding: 0.5rem;
    }

    .hashtag-preset {
        padding: 0.75rem;
        margin-bottom: 0.5rem;
    }

    .hashtag-preset input,
    .hashtag-preset button {
        margin: 0.25rem 0;
        padding: 0.5rem;
        font-size: 1rem;
    }

    .hashtag-config-toggle {
        bottom: 0.5rem;
        right: 0.5rem;
        width: 36px;
        height: 36px;
        font-size: 1rem;
    }
}

/* Add a subtle pulse animation for the toggle button */
@keyframes pulse {
    0% {
        transform: scale(1);
        box-shadow: var(--box-shadow);
    }
    50% {
        transform: scale(1.1);
        box-shadow: 0 0 20px rgba(0, 89, 255, 0.5);
    }
    100% {
        transform: scale(1);
        box-shadow: var(--box-shadow);
    }
}

/* Alarm Overlay Styles */
.alarm-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10000;
    animation: fadeIn 0.3s ease-out;
}

.alarm-message {
    background: var(--primary-gradient);
    padding: 2rem;
    border-radius: var(--border-radius);
    max-width: 90%;
    width: 400px;
    text-align: center;
    animation: slideIn 0.3s ease-out;
}

.alarm-title {
    font-size: 1.5rem;
    font-weight: bold;
    margin-bottom: 1rem;
    color: var(--text-color);
}

.alarm-text {
    font-size: 1.2rem;
    margin-bottom: 1.5rem;
    color: var(--text-color);
    word-break: break-word;
}

.alarm-dismiss {
    background: var(--secondary-gradient);
    color: var(--text-color);
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: var(--border-radius);
    font-size: 1.1rem;
    cursor: pointer;
    transition: transform 0.2s ease;
}

.alarm-dismiss:hover {
    transform: scale(1.05);
}

@keyframes slideIn {
    from {
        transform: translateY(-20px);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

/* Alarm Overlay Effect */
.alarm-overlay {
    animation: pulseEffect 1s infinite alternate;
}

@keyframes pulseEffect {
    0% {
        background-color: rgba(255, 0, 0, 0.1);
    }
    100% {
        background-color: rgba(255, 0, 0, 0.3);
    }
}

/* Add these styles to the end of your style.css file */

/* Hashtag hierarchy styles */
.parent-content {
    padding-left: 15px;
    border-left: 2px solid rgba(77, 77, 255, 0.2);
}

.nested-group {
    margin-left: 15px;
    position: relative;
}

.nested-group:before {
    content: '';
    position: absolute;
    left: -15px;
    top: 0;
    height: 100%;
    border-left: 1px dotted rgba(77, 77, 255, 0.3);
}

.hashtag-toggle.nested-toggle {
    font-size: 0.95em;
    opacity: 0.9;
}

/* Special styling for the parent #non0 toggle */
.hashtag-toggle .hashtag-label:contains("#non0") {
    color: #4d4dff;
    font-weight: bold;
}

/* Animation for expanding/collapsing */
.hashtag-content {
    transition: max-height 0.3s ease, opacity 0.3s ease;
    overflow: hidden;
}

/* Ensure parent toggle is always visible */
#non0-parent-toggle {
    display: block !important;
}

/* Audio Controls Styles */
.audio-controls {
    position: fixed;
    bottom: 60px;
    right: 1rem;
    display: flex;
    align-items: center;
    gap: 10px;
    background: var(--overlay-background);
    padding: 8px;
    border-radius: 20px;
    backdrop-filter: blur(5px);
    z-index: 999;
    box-shadow: var(--box-shadow);
    transition: all 0.3s ease;
}

.audio-controls:hover {
    background: rgba(255, 255, 255, 0.1);
}

.audio-toggle {
    background: var(--primary-gradient);
    border: none;
    color: var(--text-color);
    width: 36px;
    height: 36px;
    border-radius: 50%;
    font-size: 1.2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: transform 0.2s ease;
}

.audio-toggle:hover {
    transform: scale(1.1);
}

.volume-slider-container {
    overflow: hidden;
    width: 0;
    transition: width 0.3s ease;
}

.audio-controls:hover .volume-slider-container {
    width: 100px;
}

.volume-slider {
    -webkit-appearance: none;
    width: 100px;
    height: 4px;
    background: rgba(255, 255, 255, 0.2);
    outline: none;
    border-radius: 2px;
}

.volume-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: var(--text-color);
    cursor: pointer;
}

.volume-slider::-moz-range-thumb {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background: var(--text-color);
    cursor: pointer;
    border: none;
}

/* Mobile-specific adjustments */
@media (max-width: 768px) {
    .audio-controls {
        bottom: 80px;
        right: 0.5rem;
    }
    
    .audio-toggle {
        width: 32px;
        height: 32px;
        font-size: 1rem;
    }
    
    .audio-controls:hover .volume-slider-container {
        width: 80px;
    }
    
    .volume-slider {
        width: 80px;
    }
}
